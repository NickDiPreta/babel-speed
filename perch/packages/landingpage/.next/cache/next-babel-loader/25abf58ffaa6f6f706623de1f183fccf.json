{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jackiedong/Documents/perch/perchcredit.github.io/perch/packages/landingpage/pages/upload-lease/lease.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport leaseStyles from \"../../styles/upload-lease/lease.module.css\";\n\nvar lease = function lease(props) {\n  _s();\n\n  var _useDropzone = useDropzone(),\n      acceptedFiles = _useDropzone.acceptedFiles,\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var files = acceptedFiles.map(function (file) {\n    return __jsx(\"li\", {\n      key: file.path,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }\n    }, file.path, \" - \", file.size, \" bytes\");\n  });\n\n  var uploadFiles = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var i, formData, file, options, _yield$axios$post, status;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              i = 0;\n\n            case 1:\n              if (!(i < acceptedFiles.length)) {\n                _context.next = 14;\n                break;\n              }\n\n              formData = new FormData();\n              file = acceptedFiles[i];\n              formData.append(\"image\", file);\n              options = {\n                headers: {\n                  \"Content-Type\": \"multipart/form-data\"\n                }\n              };\n              _context.next = 8;\n              return axios.post(\"/api/upload-lease\", formData, options);\n\n            case 8:\n              _yield$axios$post = _context.sent;\n              status = _yield$axios$post.status;\n              console.log({\n                status: status\n              });\n\n            case 11:\n              i++;\n              _context.next = 1;\n              break;\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function uploadFiles() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: leaseStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", _extends({}, getRootProps({\n    className: \"\".concat(leaseStyles.dropzone)\n  }), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), __jsx(\"p\", {\n    className: leaseStyles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\")), __jsx(\"aside\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, \"Files\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, files)), __jsx(\"button\", {\n    onClick: uploadFiles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\n_s(lease, \"i3//039nbm0Ztc52IdZFoORkJa4=\", false, function () {\n  return [useDropzone];\n});\n\nexport default lease;","map":{"version":3,"sources":["/Users/jackiedong/Documents/perch/perchcredit.github.io/perch/packages/landingpage/pages/upload-lease/lease.js"],"names":["useDropzone","axios","leaseStyles","lease","props","acceptedFiles","getRootProps","getInputProps","files","map","file","path","size","uploadFiles","i","length","formData","FormData","append","options","headers","post","status","console","log","container","className","dropzone","text"],"mappings":";;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA;;AAAA,qBACgCJ,WAAW,EAD3C;AAAA,MACfK,aADe,gBACfA,aADe;AAAA,MACAC,YADA,gBACAA,YADA;AAAA,MACcC,aADd,gBACcA,aADd;;AAGvB,MAAMC,KAAK,GAAGH,aAAa,CAACI,GAAd,CAAkB,UAACC,IAAD;AAAA,WAC9B;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB,WAD8B;AAAA,GAAlB,CAAd;;AAMA,MAAMC,WAAW;AAAA,wEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AACTC,cAAAA,CADS,GACL,CADK;;AAAA;AAAA,oBACFA,CAAC,GAAGT,aAAa,CAACU,MADhB;AAAA;AAAA;AAAA;;AAEVC,cAAAA,QAFU,GAEC,IAAIC,QAAJ,EAFD;AAGVP,cAAAA,IAHU,GAGHL,aAAa,CAACS,CAAD,CAHV;AAIhBE,cAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBR,IAAzB;AACMS,cAAAA,OALU,GAKA;AACdC,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AADK,eALA;AAAA;AAAA,qBAWSnB,KAAK,CAACoB,IAAN,CACvB,mBADuB,EAEvBL,QAFuB,EAGvBG,OAHuB,CAXT;;AAAA;AAAA;AAWRG,cAAAA,MAXQ,qBAWRA,MAXQ;AAgBhBC,cAAAA,OAAO,CAACC,GAAR,CAAY;AAAEF,gBAAAA,MAAM,EAANA;AAAF,eAAZ;;AAhBgB;AACwBR,cAAAA,CAAC,EADzB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXD,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAoBA,SACE;AAAK,IAAA,SAAS,EAAEX,WAAW,CAACuB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0BAASnB,YAAY,CAAC;AAAEoB,IAAAA,SAAS,YAAKxB,WAAW,CAACyB,QAAjB;AAAX,GAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,4BAAWpB,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAG,IAAA,SAAS,EAAEL,WAAW,CAAC0B,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKpB,KAAL,CAFF,CAPF,EAWE;AAAQ,IAAA,OAAO,EAAEK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF;AAeD,CA5CD;;GAAMV,K;UACmDH,W;;;AA6CzD,eAAeG,KAAf","sourcesContent":["import { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\n\nimport leaseStyles from \"../../styles/upload-lease/lease.module.css\";\n\nconst lease = (props) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  const uploadFiles = async () => {\n    for (let i = 0; i < acceptedFiles.length; i++) {\n      const formData = new FormData();\n      const file = acceptedFiles[i];\n      formData.append(\"image\", file);\n      const options = {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n\n      const { status } = await axios.post(\n        \"/api/upload-lease\",\n        formData,\n        options\n      );\n      console.log({ status });\n    }\n  };\n\n  return (\n    <div className={leaseStyles.container}>\n      <div {...getRootProps({ className: `${leaseStyles.dropzone}` })}>\n        <input {...getInputProps()} />\n        <p className={leaseStyles.text}>\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <aside>\n        <h2>Files</h2>\n        <ul>{files}</ul>\n      </aside>\n      <button onClick={uploadFiles}>Submit</button>\n    </div>\n  );\n};\n\nexport default lease;\n"]},"metadata":{},"sourceType":"module"}