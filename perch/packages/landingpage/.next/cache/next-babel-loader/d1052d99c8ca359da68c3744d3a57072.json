{"ast":null,"code":"import Cors from \"cors\";\nimport initMiddleware from \"../lib/init-middleware\"; // Initialize the cors middleware\n// const cors = initMiddleware(\n//   Cors({\n//     // Only allow requests with GET, POST and PUT\n//     methods: [\"GET\", \"POST\", \"PUT\"],\n//   })\n// );\n\nexport default (async (req, res, next) => {\n  const response = await Cors({\n    // Only allow requests with GET, POST and PUT\n    methods: [\"GET\", \"POST\", \"PUT\"]\n  })(req, res);\n\n  if (response instanceof Error) {\n    console.log(\"cors error\");\n    throw new Error(\"Unable to initialize cors\");\n  }\n\n  console.log(\"cors passed\");\n  return next();\n});","map":{"version":3,"sources":["/Users/jackiedong/Documents/perch/perchcredit.github.io/perch/packages/landingpage/middlewares/corsMiddleware.js"],"names":["Cors","initMiddleware","req","res","next","response","methods","Error","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,cAAP,MAA2B,wBAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;AACvC,QAAMC,QAAQ,GAAG,MAAML,IAAI,CAAC;AAC1B;AACAM,IAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB;AAFiB,GAAD,CAAJ,CAGpBJ,GAHoB,EAGfC,GAHe,CAAvB;;AAKA,MAAIE,QAAQ,YAAYE,KAAxB,EAA+B;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAM,IAAIF,KAAJ,CAAU,2BAAV,CAAN;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACA,SAAOL,IAAI,EAAX;AACD,CAZD","sourcesContent":["import Cors from \"cors\";\nimport initMiddleware from \"../lib/init-middleware\";\n\n// Initialize the cors middleware\n// const cors = initMiddleware(\n//   Cors({\n//     // Only allow requests with GET, POST and PUT\n//     methods: [\"GET\", \"POST\", \"PUT\"],\n//   })\n// );\n\nexport default async (req, res, next) => {\n  const response = await Cors({\n    // Only allow requests with GET, POST and PUT\n    methods: [\"GET\", \"POST\", \"PUT\"],\n  })(req, res);\n\n  if (response instanceof Error) {\n    console.log(\"cors error\");\n    throw new Error(\"Unable to initialize cors\");\n  }\n  console.log(\"cors passed\");\n  return next();\n};\n"]},"metadata":{},"sourceType":"module"}