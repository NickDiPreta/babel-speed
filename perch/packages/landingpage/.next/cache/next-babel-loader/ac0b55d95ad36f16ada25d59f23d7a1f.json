{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/jackiedong/Documents/perch/perchcredit.github.io/perch/packages/landingpage/pages/upload-lease/lease.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport leaseStyles from \"../../styles/upload-lease/lease.module.css\";\n\nvar lease = function lease(props) {\n  _s();\n\n  var _useDropzone = useDropzone(),\n      acceptedFiles = _useDropzone.acceptedFiles,\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  var files = acceptedFiles.map(function (file) {\n    return __jsx(\"li\", {\n      key: file.path,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 5\n      }\n    }, file.path, \" - \", file.size, \" bytes\");\n  });\n\n  var uploadFiles = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var signedUrl, i, file, options, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              signedUrl = \"https://wellick-lease-image-s3-stage.s3.amazonaws.com/lease-image-1-1600801947234?AWSAccessKeyId=AKIAWQRXSB72EUDRGGZB&Expires=1600804947&Signature=td91TsTLE3LKoEf6%2FwHbVj78J4w%3D\";\n              i = 0;\n\n            case 2:\n              if (!(i < acceptedFiles.length)) {\n                _context.next = 12;\n                break;\n              }\n\n              file = acceptedFiles[i];\n              options = {\n                headers: {\n                  \"Content-Type\": file.type\n                }\n              };\n              _context.next = 7;\n              return axios.put(signedUrl, file, options);\n\n            case 7:\n              res = _context.sent;\n              console.log(res);\n\n            case 9:\n              i++;\n              _context.next = 2;\n              break;\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function uploadFiles() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: leaseStyles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", _extends({}, getRootProps({\n    className: \"\".concat(leaseStyles.dropzone)\n  }), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), __jsx(\"input\", _extends({}, getInputProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), __jsx(\"p\", {\n    className: leaseStyles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Drag 'n' drop some files here, or click to select files\")), __jsx(\"aside\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Files\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, files)), __jsx(\"button\", {\n    onClick: uploadFiles,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Submit\"));\n};\n\n_s(lease, \"i3//039nbm0Ztc52IdZFoORkJa4=\", false, function () {\n  return [useDropzone];\n});\n\nexport default lease;","map":{"version":3,"sources":["/Users/jackiedong/Documents/perch/perchcredit.github.io/perch/packages/landingpage/pages/upload-lease/lease.js"],"names":["useDropzone","axios","leaseStyles","lease","props","acceptedFiles","getRootProps","getInputProps","files","map","file","path","size","uploadFiles","signedUrl","i","length","options","headers","type","put","res","console","log","container","className","dropzone","text"],"mappings":";;;;;;;;;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,4CAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA;;AAAA,qBACgCJ,WAAW,EAD3C;AAAA,MACfK,aADe,gBACfA,aADe;AAAA,MACAC,YADA,gBACAA,YADA;AAAA,MACcC,aADd,gBACcA,aADd;;AAGvB,MAAMC,KAAK,GAAGH,aAAa,CAACI,GAAd,CAAkB,UAACC,IAAD;AAAA,WAC9B;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB,WAD8B;AAAA,GAAlB,CAAd;;AAMA,MAAMC,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,cAAAA,SADY,GAEhB,qLAFgB;AAITC,cAAAA,CAJS,GAIL,CAJK;;AAAA;AAAA,oBAIFA,CAAC,GAAGV,aAAa,CAACW,MAJhB;AAAA;AAAA;AAAA;;AAKVN,cAAAA,IALU,GAKHL,aAAa,CAACU,CAAD,CALV;AAMVE,cAAAA,OANU,GAMA;AACdC,gBAAAA,OAAO,EAAE;AACP,kCAAgBR,IAAI,CAACS;AADd;AADK,eANA;AAAA;AAAA,qBAWElB,KAAK,CAACmB,GAAN,CAAUN,SAAV,EAAqBJ,IAArB,EAA2BO,OAA3B,CAXF;;AAAA;AAWVI,cAAAA,GAXU;AAYhBC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AAZgB;AAIwBN,cAAAA,CAAC,EAJzB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXF,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAgBA,SACE;AAAK,IAAA,SAAS,EAAEX,WAAW,CAACsB,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,0BAASlB,YAAY,CAAC;AAAEmB,IAAAA,SAAS,YAAKvB,WAAW,CAACwB,QAAjB;AAAX,GAAD,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACE,4BAAWnB,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,EAEE;AAAG,IAAA,SAAS,EAAEL,WAAW,CAACyB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+DAFF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKnB,KAAL,CAFF,CAPF,EAWE;AAAQ,IAAA,OAAO,EAAEK,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CADF;AAeD,CAxCD;;GAAMV,K;UACmDH,W;;;AAyCzD,eAAeG,KAAf","sourcesContent":["import { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\n\nimport leaseStyles from \"../../styles/upload-lease/lease.module.css\";\n\nconst lease = (props) => {\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone();\n\n  const files = acceptedFiles.map((file) => (\n    <li key={file.path}>\n      {file.path} - {file.size} bytes\n    </li>\n  ));\n\n  const uploadFiles = async () => {\n    const signedUrl =\n      \"https://wellick-lease-image-s3-stage.s3.amazonaws.com/lease-image-1-1600801947234?AWSAccessKeyId=AKIAWQRXSB72EUDRGGZB&Expires=1600804947&Signature=td91TsTLE3LKoEf6%2FwHbVj78J4w%3D\";\n\n    for (let i = 0; i < acceptedFiles.length; i++) {\n      const file = acceptedFiles[i];\n      const options = {\n        headers: {\n          \"Content-Type\": file.type,\n        },\n      };\n      const res = await axios.put(signedUrl, file, options);\n      console.log(res);\n    }\n  };\n\n  return (\n    <div className={leaseStyles.container}>\n      <div {...getRootProps({ className: `${leaseStyles.dropzone}` })}>\n        <input {...getInputProps()} />\n        <p className={leaseStyles.text}>\n          Drag 'n' drop some files here, or click to select files\n        </p>\n      </div>\n      <aside>\n        <h2>Files</h2>\n        <ul>{files}</ul>\n      </aside>\n      <button onClick={uploadFiles}>Submit</button>\n    </div>\n  );\n};\n\nexport default lease;\n"]},"metadata":{},"sourceType":"module"}